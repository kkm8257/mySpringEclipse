<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- ///////////////////////////////////////////////////////////////////////////////// -->
	<!-- 빈은 객체를 생성하는 것이 bean태그, id는 찾는 이름 , class 는 Maven에서 받은 ( pom.xml을 통해) 
		클래스파일 경로와 이름 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">

		<!-- property 에서 name에 넣는 것들은 그냥 루틴이라고 보면됨 이런식으로 쓰는게 정답 value 에 쓰는건 직접 
			연결할때 적어주는 것들이 주로 들어간다 Class.forName("oracle.jdbc.driver.OracleDriver"); //인자로 
			받은것이 바로 메모리로 로드 되는 것 . Class.forName Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","kyungmin","1234")) -->
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="jdbcUrl"
			value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="kyungmin"></property>
		<property name="password" value="1234"></property>

		<!-- 여기까지가 bean 태그를 이용하여 , HicariCP 설정을 위한 객체 선 -->
	</bean>

	<!-- ///////////////////////////////////////////////////////////////////////////////// -->

	<!-- hikariCP의 객체 ( 데이터 소스 객체 ) 선언 , 위에 설정해놓은 것들을 다 갖다 쓸것임 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
		<!-- HikariCP 설정 객체를 사용하도록 선언 : 생성자에서 불러 오도록 하여야 한다.(property는 setter , 
			constructor는 생성 -->
		<constructor-arg ref="hikariConfig"></constructor-arg>

	</bean>


	<!-- 하단은 직접 작성한 내용 -->
	<context:component-scan
		base-package="org.zerock.sample" />

	<!-- 위 코드는 component-scan은 구성하고있는 구성 요소들을 검색하는데 org.zerock.sample 밑에있는 모든 
		패키지에서 찾아본다. 무엇을? @ 가달려있는것 그래서 이 root-context.xml 안에이런식으로 정의가 되어있어야 @Component를 
		썻을떄 의미가 있는 것 -->


</beans>
